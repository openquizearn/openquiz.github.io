{"version":3,"sources":["config/firebaseConfig.js","firebase.js","components/landing/oauth.js","components/landing/landing.js","components/common/Spinner.js","components/dashboard/Menu/Profile.js","components/dashboard/Menu/Rewards.js","components/dashboard/Menu/Refer.js","components/dashboard/ProfileDrawer.js","components/dashboard/Navbar.js","components/dashboard/index.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/authReducer.js","reducers/rootReducer.js","actions/authActions.js","actions/userAction.js","actions/saga.js","store/store.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","Oauth","useState","dispatch","useDispatch","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","provider","PhoneAuthProvider","defaultCountry","callbacks","signInSuccessWithAuthResult","authResult","newUser","additionalUserInfo","isNewUser","console","log","type","payload","profile","firebaseAuth","Landing","modalVisible","setModalVisible","useSelector","state","useEffect","id","InstagramOutlined","style","fontSize","GithubOutlined","marginLeft","left","display","flexDirection","flexWrap","justifyContent","alignItems","DollarCircleTwoTone","spin","right","color","shape","onClick","bottom","title","hoverable","margin","value","precision","prefix","centered","visible","onOk","onCancel","Spinner","height","size","Profile","user","percent","setPercent","p","email","displayName","phoneNumber","placeholder","UserOutlined","Rewards","Refer","SubMenu","Menu","ProfileDrawer","props","m","current","setCurrent","width","placement","closable","onClose","setProfileVisible","profileVisible","e","key","selectedKeys","mode","icon","UsergroupAddOutlined","ItemGroup","Item","LogoutOutlined","signOut","window","location","href","DollarOutlined","Navbar","fontFamily","marginRight","Dashboard","isAuth","App","onAuthStateChanged","providerData","notification","info","message","description","destroy","className","to","path","exact","Boolean","hostname","match","initialState","error","rootReducer","combineReducers","action","authSuccess","authSaga","db","firestore","put","uid","success","data","collection","doc","set","coins","referrals","refferedBy","verified","lastQuiz","then","docRef","catch","loading","content","setTimeout","duration","takeEvery","getUserData","userSaga","getUserDataAsync","get","call","warn","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca7923a6.chunk.js","sourcesContent":[" const firebaseConfig =  {\r\n    apiKey: \"AIzaSyAuOf94KCcW2oTI3gUitSD35tWsPggP0Z0\",\r\n    authDomain: \"openquiz-29cc5.firebaseapp.com\",\r\n    databaseURL: \"https://openquiz-29cc5.firebaseio.com\",\r\n    projectId: \"openquiz-29cc5\",\r\n    storageBucket: \"openquiz-29cc5.appspot.com\",\r\n    messagingSenderId: \"164997608299\",\r\n    appId: \"1:164997608299:web:356365bf263b879e7a122e\",\r\n    measurementId: \"G-BVJGHYMEWD\"\r\n  }\r\n\r\n\r\n  export default firebaseConfig;","import * as firebase from 'firebase';\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\n\r\nvar app = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nfirebase.analytics();\r\n\r\n\r\n export default app;","import React,{useState} from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport app from '../../firebase'\r\nimport uiConfig from '../../config/firebaseUi'\r\nimport {useDispatch} from 'react-redux'\r\nimport firebase from 'firebase'\r\n\r\nexport default function Oauth() {\r\n    const [newUser,setNewUser] = useState(false)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <StyledFirebaseAuth uiConfig={\r\n            {\r\n                // Popup signin flow rather than redirect flow.\r\n                signInFlow: 'popup',\r\n                \r\n                // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n                // signInSuccessUrl: '/dashboard',\r\n                // We will display Google and Facebook as auth providers.\r\n                signInOptions: [\r\n                  firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n                \r\n                  {\r\n                    provider:firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n                    defaultCountry: '91',\r\n                  }\r\n                  \r\n                ],\r\n            \r\n                 \r\n                  callbacks: {\r\n                    // Avoid redirects after sign-in.\r\n                    signInSuccessWithAuthResult: (authResult)=>{\r\n                        const newUser = authResult.additionalUserInfo.isNewUser;\r\n                        console.log(authResult)\r\n                        if(newUser){\r\n                            dispatch({type:\"NEW_USER_LOGIN\",payload:authResult.additionalUserInfo.profile})\r\n                            \r\n                        }\r\n                        return true;\r\n                    } \r\n                  }\r\n                  \r\n                }\r\n               \r\n\r\n\r\n        } firebaseAuth={app.auth()}/>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './landing.css'\r\nimport { \r\n    Button ,\r\n    Divider ,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Modal,\r\n    notification ,\r\n    Statistic,\r\n    Spin\r\n} from 'antd';\r\nimport OAuth from './oauth'\r\nimport {DollarCircleTwoTone,InstagramOutlined,GithubOutlined} from '@ant-design/icons'\r\nimport {Fade} from 'react-reveal'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport firebase from '../../firebase'\r\n\r\n\r\n function Landing() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const auth = useSelector(state=>state.auth)\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n       \r\n           \r\n    },[])\r\n\r\n    return (\r\n        \r\n        <div id=\"container\">\r\n        <Fade>\r\n            <nav id=\"top-nav\">\r\n                 <span id=\"logo\">OPEN QUIZ</span> \r\n                 <div id=\"links\">\r\n                    <InstagramOutlined  style={{fontSize:\"30px\"}}/>\r\n                    <GithubOutlined  style={{fontSize:\"30px\",marginLeft:\"5px\"}}/>\r\n                 </div>\r\n            </nav>\r\n        </Fade>\r\n            <Divider/>\r\n            <div id=\"middle\">\r\n                <Fade left>\r\n                    \r\n                <div style={{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <DollarCircleTwoTone spin style={{fontSize:\"60px\"}}/>\r\n                    <span id=\"logo-middle\">\r\n                    \r\n                  OPEN QUIZ</span></div>\r\n                </Fade>\r\n           \r\n                <Fade right>\r\n                    <div id=\"middle-btn-grp\">\r\n                        <h1 style={{color:\"#3959a2\"}}>Want to Earn Money ?</h1>\r\n                        <p>Have you ever thought earning money would be so easy ?<br/>\r\n                            Earn by just winning various QUIZ matches\r\n                        </p>\r\n                        <Button type=\"primary\" shape=\"round\" onClick={()=>setModalVisible(true)}>GET STARTED</Button>\r\n                    \r\n                    </div>\r\n            </Fade>\r\n            \r\n            </div>\r\n\r\n            <Divider/>\r\n            <Fade bottom>\r\n            <div id=\"card-grp\">\r\n                \r\n                    <Card title=\"Earn Real Money\" hoverable style={{margin:5}}>\r\n                    Free Website to MAKE MONEY for trying Free apps! Earn real money by \r\n                    completing simple quiz inside the website. Easily make free money !.\r\n                    </Card>\r\n               \r\n                \r\n                    <Card title=\"Increase General Knowledge\" hoverable style={{margin:5}}>\r\n                    Even in the age of Google, general knowledge still matters. These awesome web-site will help you to \r\n                    expand your general knowledge from alot of quizzes.\r\n                    </Card>\r\n              \r\n                \r\n                    <Card title=\"1000+ Quiz Question\" hoverable style={{margin:5}}>\r\n                        We have 1000 + trivia based MCQ's questions and True/False Questions as well \r\n                        which are available in three difficulty.\r\n                    </Card>\r\n             \r\n            </div>\r\n            </Fade>\r\n           <Divider/>\r\n           <div id=\"stats\">\r\n               \r\n                    <Statistic title=\"Active Users\" value={11289} />\r\n                    <Statistic title=\"Amount Paid to Users\" value={12598.54} precision={2} prefix=\"$\"/>\r\n                    \r\n                \r\n            </div>\r\n           <Divider/>\r\n           <div id=\"footer\">\r\n            <span>Product by @Codified Coder</span>\r\n           \r\n           </div>\r\n\r\n           <Modal\r\n           title=\"Login \"\r\n           centered\r\n           visible={modalVisible}\r\n           onOk={() => setModalVisible(false)}\r\n           onCancel={() => setModalVisible(false)}\r\n         >\r\n           <OAuth/>\r\n         </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react'\r\nimport {Spin} from 'antd'\r\nexport default function Spinner() {\r\n    return (\r\n        <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\"}}>\r\n                <Spin size=\"large\"/>\r\n\r\n            </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {\r\n    Avatar ,\r\n    Progress,\r\n    Input ,\r\n    Divider\r\n} from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\n\r\nexport default function Profile() {\r\n    const user = useSelector(state=>state.auth.user)\r\n    const [percent,setPercent] = useState(0)\r\n\r\n    useEffect(()=>{\r\n            var p = 0;\r\n            if(user.email!==null ){\r\n                p+=4;\r\n            }\r\n            if(user.displayName!==null){\r\n                p+=4;\r\n            }\r\n            if(user.phoneNumber!==null){\r\n               p+=2;\r\n            }\r\n            \r\n            setPercent(p*10)\r\n     \r\n    },[])\r\n    return (\r\n        <div id=\"profile-menu\">\r\n            <div id=\"profile-top\">\r\n                <Avatar  size={80} >Image</Avatar>\r\n                <Progress type=\"circle\" percent={percent} />\r\n            </div>\r\n            <Divider/>\r\n            <div>\r\n                \r\n                <Input size=\"large\" placeholder=\"Enter Username\" prefix={<UserOutlined />} />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rewards() {\r\n    return (\r\n        <div id=\"rewards-menu\">\r\n            Rewards Page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Refer() {\r\n    return (\r\n        <div>\r\n            Refer and earn\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Drawer,Menu} from \"antd\"\r\nimport {DollarOutlined,\r\n  UsergroupAddOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined\r\n\r\n} from '@ant-design/icons'\r\nimport firebase from '../../firebase'\r\nimport Profile from './Menu/Profile'\r\nimport Rewards from './Menu/Rewards'\r\nimport Refer from './Menu/Refer'\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function ProfileDrawer(props) {\r\n   \r\n    const [current,setCurrent] = useState(\"profile\")\r\n    const handleClick=(e)=>{\r\n      setCurrent(e.key)\r\n     \r\n    }\r\n    const logout=()=>{\r\n      firebase.auth().signOut()\r\n      window.location.href = \"/\"\r\n  }\r\n  const currentMenu=(m)=>{\r\n    const menu = {\r\n      \"profile\":<Profile/>,\r\n      \"rewards\":<Rewards/>,\r\n      \"refer\":<Refer/>\r\n    }\r\n    return menu[m];\r\n  }\r\n    return (\r\n        <Drawer\r\n        width={\"70%\"}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={()=>props.setProfileVisible(false)}\r\n        visible={props.profileVisible}\r\n        >\r\n        \r\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n\r\n            <SubMenu  title=\"Profile\" icon={<UsergroupAddOutlined />}>\r\n              <Menu.ItemGroup title=\"Settings\">\r\n                <Menu.Item key=\"profile\" icon={<UserOutlined/>}>Profile</Menu.Item>\r\n                <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={()=>logout()}>Logout</Menu.Item>\r\n              </Menu.ItemGroup>\r\n          </SubMenu>\r\n\r\n            <SubMenu  title=\"Rewards\" icon={<DollarOutlined/>}>\r\n              <Menu.Item key=\"rewards\">Rewards Coins</Menu.Item>\r\n              <Menu.Item key=\"refer\">Refer and Earn</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n\r\n    \r\n\r\n        {currentMenu(current)}\r\n\r\n\r\n        \r\n\r\n      </Drawer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Divider\r\n} from 'antd'\r\nimport {LogoutOutlined,UserOutlined} from '@ant-design/icons'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const user = useSelector(state=>state.auth.user)\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <h1 style={{fontSize:\"40px\",fontFamily:'Galada',color:\"#002766\"}}>{props.title}</h1>\r\n\r\n      <div id=\"navbar-grp\">\r\n      \r\n          <h3 style={{marginRight:\"25px\"}}>{user.displayName}</h3>\r\n     \r\n      \r\n\r\n      <Tooltip placement=\"topLeft\" title=\"Profile\">\r\n      <Button shape=\"round\" onClick={()=>props.setProfileVisible(true)} style={{marginRight:\"15px\"}} icon={<UserOutlined />}></Button>\r\n      \r\n      </Tooltip>\r\n     \r\n     \r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport './dashboard.css'\r\nimport {\r\n    Button,\r\n    notification,\r\n    Divider\r\n} from 'antd'\r\nimport Spinner from '../common/Spinner'\r\nimport ProfileDrawer from './ProfileDrawer'\r\nimport Navbar from './Navbar'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state=>state.auth)\r\n    var [profileVisible,setProfileVisible] = useState(false)\r\n    var [title,setTitle] = useState(\"DASHBOARD\")\r\n    useEffect(()=>{\r\n        if(auth.newUser){\r\n           \r\n        }\r\n        },[]);\r\n       \r\n        \r\n    return (\r\n        <div>\r\n        {!auth.isAuth ? \r\n            <Spinner/>\r\n            :\r\n        <div id=\"dashboard\">\r\n    \r\n            <Navbar title={title}  setProfileVisible={setProfileVisible}/>\r\n            \r\n            <ProfileDrawer profileVisible={profileVisible} setProfileVisible={setProfileVisible}/>\r\n        </div>\r\n    }\r\n      </div>  \r\n    )\r\n}\r\n","import React,{useEffect} from 'react';\nimport firebase from './firebase'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n } from \"react-router-dom\";\n import {useSelector,useDispatch} from 'react-redux'\n import Landing from './components/landing/landing'\nimport Dashboard from './components/dashboard'\nimport {notification} from 'antd'\n\n\nfunction App() {\n  const auth = useSelector(state=>state.auth)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            dispatch({type:\"REQUEST_AUTH_SUCCESS\",payload:user.providerData[0]}) \n        } else {\n            dispatch({type:\"AUTH_FAILED\"})  \n            notification.info({\n              message: 'Hi Buddy',\n              description:\n                'Click on Get Started and start earning money',\n                \n              onClick: () => {\n                \n                notification.destroy()\n              },\n              placement:\"bottomLeft\"\n            });\n        }\n      });\n    },[]);\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        {auth.isAuth ?  <span>\n            <Redirect to=\"/dashboard\"/>\n          </span>:null}\n       \n        <Switch>\n          <Route path=\"/\" exact>\n            <Landing/>\n          </Route>\n         \n          <Route path=\"/dashboard\">\n            <Dashboard/>\n          </Route>\n          \n        </Switch>\n        </Router>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {\r\n    user:null\r\n}\r\n\r\n\r\nexport default function userReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n        return {\r\n            ...action.payload\r\n        }\r\n        case \"RESET_USER\":\r\n            return {\r\n                user:null\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\n\r\nconst initialState = {\r\n    isAuth:false,\r\n    user:null,\r\n    error:false,\r\n    newUser:false\r\n}\r\n\r\n\r\n\r\n\r\nexport default function authReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"AUTH_SUCCESS\":\r\n        return {\r\n            user:action.payload,\r\n            isAuth:true,\r\n            error:false,\r\n            newUser:false\r\n        }\r\n        case \"AUTH_FAILED\":\r\n            return {\r\n                user:null,\r\n                isAuth:false,\r\n                error:false,\r\n                newUser:false\r\n            }\r\n        case \"AUTH_SUCCESS_FIRST\":\r\n            return{\r\n                user:action.payload,\r\n                isAuth:true,\r\n                error:false,\r\n                newUser:true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\nimport {combineReducers} from 'redux'\r\nimport userReducer from './userReducer'\r\nimport authReducer from './authReducer'\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    user:userReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import {takeEvery,call,put,delay} from 'redux-saga/effects'\r\nimport {notification,message} from 'antd'\r\nimport firebase from '../firebase'\r\n\r\n\r\nvar db = firebase.firestore()\r\n\r\n\r\n\r\nfunction* authSuccess(action){\r\n       \r\n      yield put({type:\"AUTH_SUCCESS\",payload:action.payload})\r\n      yield put({type:\"GET_USER_DATA\",payload:action.payload.uid})\r\n       notification.success({\r\n        message: 'Welcome',\r\n        description:\r\n          'Start Earning money , Click here to play quiz',\r\n          \r\n        onClick: () => {\r\n          notification.destroy()\r\n        },\r\n        placement:\"bottomRight\"\r\n      });\r\n       \r\n}\r\nfunction* newUser(action){\r\n\r\n    const data = action.payload\r\n    yield put({type:\"AUTH_SUCCESS_FIRST\",payload:data})\r\n    db.collection(\"users\").doc(data.id).set({\r\n        coins:500,\r\n        referrals:[],\r\n        refferedBy:\"\",\r\n        uid:data.id,\r\n        verified:false,\r\n        lastQuiz:\"\"\r\n    }).then(function(docRef) {\r\n        console.log(\"Document written with ID: \", docRef);\r\n    }).catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n    const key = \"updatable\"\r\n        message.loading({ content: 'Adding 500 Sign In Coins...', key });\r\n        setTimeout(() => {\r\n            message.success({ content: 'Added!', key, duration: 3 });\r\n        }, 6000);\r\n  \r\n \r\n}\r\n\r\n\r\nexport default function* authSaga(){\r\nyield takeEvery(\"REQUEST_AUTH_SUCCESS\",authSuccess)\r\nyield takeEvery(\"NEW_USER_LOGIN\",newUser)\r\n}","import {takeEvery,call,put,delay} from 'redux-saga/effects'\r\nimport {notification,message} from 'antd'\r\nimport firebase from '../firebase'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst getUserDataAsync = (id)=>{\r\n    var data =  db.collection(\"users\").doc(id).get().then((docRef) => { \r\n    return docRef.data();\r\n})\r\nreturn data;\r\n}\r\n\r\n\r\nfunction* getUserData(action){\r\n    const data = yield call(getUserDataAsync,action.payload)\r\n    if(data){\r\n        yield put({type:\"SET_USER\",payload:data})\r\n          if(!data.verified){\r\n            notification.warn({\r\n                message: 'Your Profile is not verified',\r\n                description:\r\n                  'Update your profile to 100% and get extra 500 Bonus Points',\r\n                  \r\n                onClick: () => {\r\n                  notification.destroy()\r\n                },\r\n                placement:\"bottomRight\"\r\n              });\r\n          }\r\n      }\r\n      \r\n}\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield takeEvery(\"GET_USER_DATA\",getUserData)\r\n  \r\n}","import authSaga from './authActions'\r\nimport userSaga from './userAction'\r\nimport {all} from 'redux-saga/effects'\r\n\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        authSaga(),\r\n        userSaga()\r\n    ])\r\n}","import {createStore,applyMiddleware} from 'redux'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../actions/saga'\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   applyMiddleware(sagaMiddleware)\r\n  ));\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nReactDOM.render(\n \n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}