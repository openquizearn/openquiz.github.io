{"version":3,"sources":["config/firebaseConfig.js","firebase.js","components/dashboard/Navbar.js","config/firebaseUi.js","components/landing/oauth.js","components/landing/landing.js","components/common/Spinner.js","components/dashboard/Menu/Profile.js","components/dashboard/Menu/Rewards.js","components/dashboard/ProfileDrawer.js","components/dashboard/index.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/authReducer.js","reducers/rootReducer.js","actions/authActions.js","actions/saga.js","store/store.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","Navbar","props","user","useSelector","state","auth","id","style","fontSize","fontFamily","color","title","marginRight","displayName","placement","shape","onClick","setProfileVisible","icon","UserOutlined","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","PhoneAuthProvider","Oauth","firebaseAuth","Landing","useState","modalVisible","setModalVisible","useDispatch","useEffect","InstagramOutlined","GithubOutlined","marginLeft","left","display","flexDirection","flexWrap","justifyContent","alignItems","DollarCircleTwoTone","spin","right","type","bottom","hoverable","margin","value","precision","prefix","centered","visible","onOk","onCancel","Spinner","height","size","Profile","Rewards","SubMenu","Menu","ProfileDrawer","SelectedMenu","current","setCurrent","width","closable","onClose","profileVisible","e","key","selectedKeys","mode","Item","UsergroupAddOutlined","ItemGroup","LogoutOutlined","signOut","window","location","href","Dashboard","newUser","notification","warn","message","description","destroy","isAuth","App","dispatch","onAuthStateChanged","payload","providerData","success","info","className","to","path","exact","Boolean","hostname","match","initialState","error","rootReducer","combineReducers","action","authRequest","authSaga","data","phoneNumber","email","response","console","log","put","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2ed9b46d.chunk.js","sourcesContent":[" const firebaseConfig =  {\r\n    apiKey: \"AIzaSyAuOf94KCcW2oTI3gUitSD35tWsPggP0Z0\",\r\n    authDomain: \"openquiz-29cc5.firebaseapp.com\",\r\n    databaseURL: \"https://openquiz-29cc5.firebaseio.com\",\r\n    projectId: \"openquiz-29cc5\",\r\n    storageBucket: \"openquiz-29cc5.appspot.com\",\r\n    messagingSenderId: \"164997608299\",\r\n    appId: \"1:164997608299:web:356365bf263b879e7a122e\",\r\n    measurementId: \"G-BVJGHYMEWD\"\r\n  }\r\n\r\n\r\n  export default firebaseConfig;","import * as firebase from 'firebase';\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\n\r\nvar app = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nfirebase.analytics();\r\n\r\n\r\n export default app;","import React from 'react'\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Divider\r\n} from 'antd'\r\nimport {LogoutOutlined,UserOutlined} from '@ant-design/icons'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const user = useSelector(state=>state.auth.user)\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <h1 style={{fontSize:\"40px\",fontFamily:'Galada',color:\"#002766\"}}>{props.title}</h1>\r\n\r\n      <div id=\"navbar-grp\">\r\n      \r\n          <h3 style={{marginRight:\"25px\"}}>{user.displayName}</h3>\r\n     \r\n      \r\n\r\n      <Tooltip placement=\"topLeft\" title=\"Profile\">\r\n      <Button shape=\"round\" onClick={()=>props.setProfileVisible(true)} style={{marginRight:\"15px\"}} icon={<UserOutlined />}></Button>\r\n      \r\n      </Tooltip>\r\n     \r\n     \r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import firebase from 'firebase'\r\n\r\n\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    // signInSuccessUrl: '/dashboard',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID\r\n    ]\r\n  };\r\n\r\n\r\n\r\n  export default uiConfig;","import React from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../../firebase'\r\nimport uiConfig from '../../config/firebaseUi'\r\nexport default function Oauth() {\r\n    return (\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './landing.css'\r\nimport { \r\n    Button ,\r\n    Divider ,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Modal,\r\n    notification ,\r\n    Statistic,\r\n    Spin\r\n} from 'antd';\r\nimport OAuth from './oauth'\r\nimport {DollarCircleTwoTone,InstagramOutlined,GithubOutlined} from '@ant-design/icons'\r\nimport {Fade} from 'react-reveal'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport firebase from '../../firebase'\r\n\r\n\r\n function Landing() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const auth = useSelector(state=>state.auth)\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n       \r\n           \r\n    },[])\r\n\r\n    return (\r\n        \r\n        <div id=\"container\">\r\n        <Fade>\r\n            <nav id=\"top-nav\">\r\n                 <span id=\"logo\">OPEN QUIZ</span> \r\n                 <div id=\"links\">\r\n                    <InstagramOutlined  style={{fontSize:\"30px\"}}/>\r\n                    <GithubOutlined  style={{fontSize:\"30px\",marginLeft:\"5px\"}}/>\r\n                 </div>\r\n            </nav>\r\n        </Fade>\r\n            <Divider/>\r\n            <div id=\"middle\">\r\n                <Fade left>\r\n                    \r\n                <div style={{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <DollarCircleTwoTone spin style={{fontSize:\"60px\"}}/>\r\n                    <span id=\"logo-middle\">\r\n                    \r\n                  OPEN QUIZ</span></div>\r\n                </Fade>\r\n           \r\n                <Fade right>\r\n                    <div id=\"middle-btn-grp\">\r\n                        <h1 style={{color:\"#3959a2\"}}>Want to Earn Money ?</h1>\r\n                        <p>Have you ever thought earning money would be so easy ?<br/>\r\n                            Earn by just winning various QUIZ matches\r\n                        </p>\r\n                        <Button type=\"primary\" shape=\"round\" onClick={()=>setModalVisible(true)}>GET STARTED</Button>\r\n                    \r\n                    </div>\r\n            </Fade>\r\n            \r\n            </div>\r\n\r\n            <Divider/>\r\n            <Fade bottom>\r\n            <div id=\"card-grp\">\r\n                \r\n                    <Card title=\"Earn Real Money\" hoverable style={{margin:5}}>\r\n                    Free Website to MAKE MONEY for trying Free apps! Earn real money by \r\n                    completing simple quiz inside the website. Easily make free money !.\r\n                    </Card>\r\n               \r\n                \r\n                    <Card title=\"Increase General Knowledge\" hoverable style={{margin:5}}>\r\n                    Even in the age of Google, general knowledge still matters. These awesome web-site will help you to \r\n                    expand your general knowledge from alot of quizzes.\r\n                    </Card>\r\n              \r\n                \r\n                    <Card title=\"1000+ Quiz Question\" hoverable style={{margin:5}}>\r\n                        We have 1000 + trivia based MCQ's questions and True/False Questions as well \r\n                        which are available in three difficulty.\r\n                    </Card>\r\n             \r\n            </div>\r\n            </Fade>\r\n           <Divider/>\r\n           <div id=\"stats\">\r\n               \r\n                    <Statistic title=\"Active Users\" value={11289} />\r\n                    <Statistic title=\"Amount Paid to Users\" value={12598.54} precision={2} prefix=\"$\"/>\r\n                    \r\n                \r\n            </div>\r\n           <Divider/>\r\n           <div id=\"footer\">\r\n            <span>Product by @Codified Coder</span>\r\n           \r\n           </div>\r\n\r\n           <Modal\r\n           title=\"Login \"\r\n           centered\r\n           visible={modalVisible}\r\n           onOk={() => setModalVisible(false)}\r\n           onCancel={() => setModalVisible(false)}\r\n         >\r\n           <OAuth/>\r\n         </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react'\r\nimport {Spin} from 'antd'\r\nexport default function Spinner() {\r\n    return (\r\n        <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\"}}>\r\n                <Spin size=\"large\"/>\r\n\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Profile() {\r\n    return (\r\n        <div>\r\n            Profile Page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rewards() {\r\n    return (\r\n        <div>\r\n            Rewards Page\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Drawer,Menu} from \"antd\"\r\nimport {DollarOutlined,UsergroupAddOutlined,LogoutOutlined} from '@ant-design/icons'\r\nimport firebase from '../../firebase'\r\nimport Profile from './Menu/Profile'\r\nimport Rewards from './Menu/Rewards'\r\n\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nexport default function ProfileDrawer(props) {\r\n    var SelectedMenu = Profile;\r\n    const [current,setCurrent] = useState(\"profile\")\r\n    const handleClick=(e)=>{\r\n      setCurrent(e.key)\r\n      if(e.key===\"rewards\"){\r\n        SelectedMenu = Rewards;\r\n      }\r\n    }\r\n    const logout=()=>{\r\n      firebase.auth().signOut()\r\n      window.location.href = \"/\"\r\n  }\r\n    return (\r\n        <Drawer\r\n        width={\"90%\"}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={()=>props.setProfileVisible(false)}\r\n        visible={props.profileVisible}\r\n        >\r\n        \r\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n\r\n              <Menu.Item key=\"profile\" icon={<UsergroupAddOutlined />}>\r\n                Profile\r\n                </Menu.Item>\r\n                <SubMenu  title=\"Rewards\">\r\n            \r\n              <Menu.Item key=\"rewards\">Rewards Coins</Menu.Item>\r\n              <Menu.Item key=\"refer\">Refer and Earn</Menu.Item>\r\n        \r\n            \r\n          </SubMenu>\r\n            <SubMenu  title=\"Settings\">\r\n              <Menu.ItemGroup title=\"Profile\">\r\n                <Menu.Item key=\"Update Profile\">Update Profile</Menu.Item>\r\n                <Menu.Item key=\"Logout\" icon={<LogoutOutlined />} onClick={()=>logout()}>Logout</Menu.Item>\r\n              </Menu.ItemGroup>\r\n              \r\n            </SubMenu>\r\n\r\n        </Menu>\r\n\r\n        <SelectedMenu/>\r\n\r\n\r\n\r\n\r\n        \r\n\r\n      </Drawer>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport './dashboard.css'\r\nimport {\r\n    Button,\r\n    notification,\r\n    Divider\r\n} from 'antd'\r\nimport Spinner from '../common/Spinner'\r\nimport ProfileDrawer from './ProfileDrawer'\r\nimport Navbar from './Navbar'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state=>state.auth)\r\n    var [profileVisible,setProfileVisible] = useState(false)\r\n    var [title,setTitle] = useState(\"DASHBOARD\")\r\n    useEffect(()=>{\r\n        if(auth.newUser){\r\n            notification.warn({\r\n                message: 'Your Profile is Incomplete',\r\n                description:\r\n                  'Click here to update your profile',\r\n                  \r\n                onClick: () => {\r\n                    setProfileVisible(true)\r\n                  notification.destroy()\r\n                },\r\n                placement:\"topRight\"\r\n              });\r\n        }\r\n        },[]);\r\n       \r\n        \r\n    return (\r\n        <div>\r\n        {!auth.isAuth ? \r\n            <Spinner/>\r\n            :\r\n        <div id=\"dashboard\">\r\n    \r\n            <Navbar title={title}  setProfileVisible={setProfileVisible}/>\r\n            \r\n            <ProfileDrawer profileVisible={profileVisible} setProfileVisible={setProfileVisible}/>\r\n        </div>\r\n    }\r\n      </div>  \r\n    )\r\n}\r\n","import React,{useEffect} from 'react';\nimport firebase from './firebase'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n } from \"react-router-dom\";\n import {useSelector,useDispatch} from 'react-redux'\n import Navbar from './components/dashboard/Navbar'\n import Landing from './components/landing/landing'\nimport Dashboard from './components/dashboard'\nimport {notification} from 'antd'\n\n\nfunction App() {\n  const auth = useSelector(state=>state.auth)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            dispatch({type:\"REQUEST_AUTH\",payload:user.providerData[0]})  \n            notification.success({\n              message: 'Welcome Back',\n              description:\n                'Start Earning money , Click here to play quiz',\n                \n              onClick: () => {\n                notification.destroy()\n              },\n              placement:\"bottomRight\"\n            });\n        } else {\n            dispatch({type:\"AUTH_FAILED\"})  \n            notification.info({\n              message: 'Hi Buddy',\n              description:\n                'Click on Get Started and start earning money',\n                \n              onClick: () => {\n                \n                notification.destroy()\n              },\n              placement:\"bottomRight\"\n            });\n        }\n      });\n    },[]);\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        {auth.isAuth ?  <span>\n            <Redirect to=\"/dashboard\"/>\n          </span>:null}\n       \n        <Switch>\n          <Route path=\"/\" exact>\n            <Landing/>\n          </Route>\n         \n          <Route path=\"/dashboard\">\n            <Dashboard/>\n          </Route>\n          \n        </Switch>\n        </Router>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nconst initialState = {\r\n    user:null\r\n}\r\n\r\n\r\n\r\n\r\nexport default function userReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n        return {\r\n            user:action.payload\r\n        }\r\n        case \"RESET_USER\":\r\n            return {\r\n                user:null\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\n\r\nconst initialState = {\r\n    isAuth:false,\r\n    user:null,\r\n    error:false,\r\n    newUser:false\r\n}\r\n\r\n\r\n\r\n\r\nexport default function authReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"AUTH_SUCCESS\":\r\n        return {\r\n            user:action.payload,\r\n            isAuth:true,\r\n            error:false,\r\n            newUser:false\r\n        }\r\n        case \"AUTH_FAILED\":\r\n            return {\r\n                user:null,\r\n                isAuth:false,\r\n                error:false,\r\n                newUser:false\r\n            }\r\n        case \"AUTH_SUCCESS_FIRST\":\r\n            return{\r\n                user:action.payload,\r\n                isAuth:true,\r\n                error:false,\r\n                newUser:true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\nimport {combineReducers} from 'redux'\r\nimport userReducer from './userReducer'\r\nimport authReducer from './authReducer'\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    user:userReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import {takeEvery,call,put,delay, all} from 'redux-saga/effects'\r\n\r\n\r\n\r\nfunction verifyProfileData(data){\r\n    if(data.displayName===null || data.phoneNumber ===null || data.email===null){\r\n        return false\r\n    }else{\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction* authRequest(action){\r\n   \r\n   const response = yield verifyProfileData(action.payload)\r\n   console.log(response)\r\n   if(response){\r\n       yield put({type:\"AUTH_SUCCESS\",payload:action.payload})\r\n   }else{\r\n       yield put({type:\"AUTH_SUCCESS_FIRST\",payload:action.payload})\r\n   }\r\n}\r\n\r\n\r\n\r\nexport default function* authSaga(){\r\nyield takeEvery(\"REQUEST_AUTH\",authRequest)\r\n}","import authSaga from './authActions'\r\nimport {all} from 'redux-saga/effects'\r\n\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        authSaga()\r\n    ])\r\n}","import {createStore,applyMiddleware} from 'redux'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../actions/saga'\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   applyMiddleware(sagaMiddleware)\r\n  ));\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nReactDOM.render(\n \n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}