{"version":3,"sources":["components/landing/landing.js","components/common/Spinner.js","components/dashboard/Menu/Profile.js","components/dashboard/Menu/Rewards.js","components/dashboard/Menu/Refer.js","components/dashboard/ProfileDrawer.js","components/dashboard/Navbar.js","components/dashboard/index.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/authReducer.js","reducers/rootReducer.js","actions/authActions.js","actions/userAction.js","actions/saga.js","store/store.js","index.js","config/firebaseConfig.js","firebase.js"],"names":["OAuth","React","lazy","Landing","useState","modalVisible","setModalVisible","useSelector","state","auth","useDispatch","useEffect","id","InstagramOutlined","style","fontSize","GithubOutlined","marginLeft","left","display","flexDirection","flexWrap","justifyContent","alignItems","DollarCircleTwoTone","spin","right","color","type","shape","onClick","bottom","title","hoverable","margin","value","precision","prefix","centered","visible","onOk","onCancel","fallback","size","textAlign","Spinner","height","Text","Typography","Profile","user","dispatch","percent","setPercent","displayName","setDisplayName","email","setEmail","number","setNumber","error","setError","setVisible","OTP","setOTP","verificationId","setVerificationId","cred","p","phoneNumber","verifyPhoneWithOTP","applicationVerifier","firebase","RecaptchaVerifier","PhoneAuthProvider","verifyPhoneNumber","then","verifyOTP","a","c","credential","console","log","payload","phoneCredential","uid","backgroundColor","verticalAlign","gap","width","editable","onChange","placeholder","MailOutlined","e","target","MobileOutlined","onConfirm","length","submitHandler","okText","cancelText","disabled","verified","top","alignContent","otp","numInputs","inputStyle","separator","message","showIcon","description","Rewards","Refer","SubMenu","Menu","ProfileDrawer","props","m","current","setCurrent","placement","closable","onClose","setProfileVisible","profileVisible","key","selectedKeys","mode","icon","UsergroupAddOutlined","ItemGroup","Item","UserOutlined","LogoutOutlined","signOut","DollarOutlined","Navbar","fontFamily","marginRight","Dashboard","newUser","isAuth","App","onAuthStateChanged","providerData","notification","info","destroy","className","to","path","exact","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","authSuccess","authSaga","db","firestore","put","success","data","collection","doc","set","coins","referrals","refferedBy","lastQuiz","docRef","catch","loading","content","setTimeout","duration","takeEvery","getUserData","updateUserProfile","userSaga","firebaseApp","getUserDataAsync","get","call","warn","newProfile","currentUser","updatePhoneNumber","update","FieldValue","increment","alert","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app"],"mappings":"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","file":"static/js/main.17c07f4d.chunk.js","sourcesContent":["import React,{useState,useEffect,Suspense} from 'react'\r\nimport './landing.css'\r\nimport { \r\n    Button ,\r\n    Divider ,\r\n    Card,\r\n    Modal,\r\n    Statistic,\r\n    Spin\r\n} from 'antd';\r\n\r\n\r\nimport {DollarCircleTwoTone,InstagramOutlined,GithubOutlined} from '@ant-design/icons'\r\nimport {Fade} from 'react-reveal'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nconst OAuth = React.lazy(()=>import('./oauth'))\r\n\r\n function Landing() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const auth = useSelector(state=>state.auth)\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n       \r\n           \r\n    },[])\r\n\r\n    return (\r\n        \r\n        <div id=\"container\">\r\n        <Fade>\r\n            <nav id=\"top-nav\">\r\n                 <span id=\"logo\">OPEN QUIZ</span> \r\n                 <div id=\"links\">\r\n                    <InstagramOutlined  style={{fontSize:\"30px\"}}/>\r\n                    <GithubOutlined  style={{fontSize:\"30px\",marginLeft:\"5px\"}}/>\r\n                 </div>\r\n            </nav>\r\n        </Fade>\r\n            <Divider/>\r\n            <div id=\"middle\">\r\n                <Fade left>\r\n                    \r\n                <div style={{display:\"flex\",flexDirection:\"column\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <DollarCircleTwoTone spin style={{fontSize:\"60px\"}}/>\r\n                    <span id=\"logo-middle\">\r\n                    \r\n                  OPEN QUIZ</span></div>\r\n                </Fade>\r\n           \r\n                <Fade right>\r\n                    <div id=\"middle-btn-grp\">\r\n                        <h1 style={{color:\"#3959a2\"}}>Want to Earn Money ?</h1>\r\n                        <p>Have you ever thought earning money would be so easy ?<br/>\r\n                            Earn by just winning various QUIZ matches\r\n                        </p>\r\n                        <Button type=\"primary\" shape=\"round\" onClick={()=>setModalVisible(true)}>GET STARTED</Button>\r\n                    \r\n                    </div>\r\n            </Fade>\r\n            \r\n            </div>\r\n\r\n            <Divider/>\r\n            <Fade bottom>\r\n            <div id=\"card-grp\">\r\n                \r\n                    <Card title=\"Earn Real Money\" hoverable style={{margin:5}}>\r\n                    Free Website to MAKE MONEY for trying Free apps! Earn real money by \r\n                    completing simple quiz inside the website. Easily make free money !.\r\n                    </Card>\r\n               \r\n                \r\n                    <Card title=\"Increase General Knowledge\" hoverable style={{margin:5}}>\r\n                    Even in the age of Google, general knowledge still matters. These awesome web-site will help you to \r\n                    expand your general knowledge from alot of quizzes.\r\n                    </Card>\r\n              \r\n                \r\n                    <Card title=\"1000+ Quiz Question\" hoverable style={{margin:5}}>\r\n                        We have 1000 + trivia based MCQ's questions and True/False Questions as well \r\n                        which are available in three difficulty.\r\n                    </Card>\r\n             \r\n            </div>\r\n            </Fade>\r\n           <Divider/>\r\n           <div id=\"stats\">\r\n               \r\n                    <Statistic title=\"Active Users\" value={11289} />\r\n                    <Statistic title=\"Amount Paid to Users\" value={12598.54} precision={2} prefix=\"$\"/>\r\n                    \r\n                \r\n            </div>\r\n           <Divider/>\r\n           <div id=\"footer\">\r\n            <span>Product by @Codified Coder</span>\r\n           \r\n           </div>\r\n\r\n           <Modal\r\n           title=\"Login \"\r\n           centered\r\n           visible={modalVisible}\r\n           onOk={() => setModalVisible(false)}\r\n           onCancel={() => setModalVisible(false)}\r\n         >\r\n         <Suspense fallback={<Spin size={40} style={{textAlign:\"center\"}}/>}>\r\n             <OAuth/>\r\n         </Suspense>\r\n           \r\n         </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react'\r\nimport {Spin} from 'antd'\r\nexport default function Spinner() {\r\n    return (\r\n        <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\"}}>\r\n                <Spin size=\"large\"/>\r\n\r\n            </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {\r\n    Avatar ,\r\n    Progress,\r\n    Input ,\r\n    Divider,\r\n    Typography ,\r\n    Button,\r\n    Alert,\r\n    Popconfirm,\r\n    Modal\r\n} from 'antd'\r\nimport { MailOutlined ,MobileOutlined} from '@ant-design/icons';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport firebaseApp from '../../../firebase'\r\nimport firebase from 'firebase'\r\nimport OtpInput from \"react-otp-input\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Profile() {\r\n    const user = useSelector(state=>state.user)\r\n    const dispatch = useDispatch()\r\n    const [percent,setPercent] = useState(0)\r\n    const [displayName,setDisplayName] = useState(null)\r\n    const [email,setEmail] = useState(null)\r\n    const [number,setNumber] = useState(null)\r\n    const [error,setError] = useState(false)\r\n    const [visible,setVisible] = useState(false)\r\n    const [OTP,setOTP] = useState(null)\r\n    const [verificationId,setVerificationId] = useState(null)\r\n    const [cred,setCred] = useState(null)\r\n    useEffect(()=>{\r\n            var p = 0;\r\n            if(user.email!==null ){\r\n                p+=4;\r\n                setEmail(user.email)\r\n            }\r\n            if(user.displayName!==null){\r\n                p+=4;\r\n                setDisplayName(user.displayName)\r\n            }\r\n            if(user.phoneNumber!==null){\r\n               p+=2;\r\n               setNumber(user.phoneNumber)\r\n            }\r\n            setPercent(p*10)\r\n     \r\n    },[])\r\n\r\n    const submitHandler=()=>{\r\n        if(displayName!==null){\r\n            if(email!==null){\r\n                if(number!==null && number.length >= 10){\r\n                    setError(false)\r\n                    verifyPhoneWithOTP(); \r\n                    return\r\n                }\r\n            }\r\n        }\r\n        setError(true)\r\n    }\r\n    const verifyPhoneWithOTP=()=>{\r\n        \r\n        var applicationVerifier = new firebase.auth.RecaptchaVerifier(\r\n            'recaptcha-container');\r\n        var provider = new firebase.auth.PhoneAuthProvider();\r\n        \r\n        provider.verifyPhoneNumber(number, applicationVerifier)\r\n        .then(function(verificationId) {\r\n                setVisible(true)\r\n                setVerificationId(verificationId)\r\n              });\r\n          \r\n           \r\n                \r\n                \r\n        \r\n    }\r\n\r\n    const verifyOTP= async()=>{\r\n        var c = firebase.auth.PhoneAuthProvider.credential(verificationId,\r\n            OTP)\r\n            console.log(cred,c)\r\n            dispatch({\r\n                type:\"UPDATE_USER_PROFILE\",payload:{\r\n                email,\r\n                number,\r\n                displayName,\r\n                phoneCredential:c,\r\n                uid:user.uid\r\n            }\r\n            })\r\n       \r\n        setVisible(false)\r\n        setPercent(100)\r\n    }\r\n    return (\r\n        <div id=\"profile-menu\">\r\n            <div id=\"profile-top\">\r\n                <Avatar  size={100} style={{ backgroundColor: \"#40a9ff\", verticalAlign: 'middle' }}  gap={4}>{displayName}</Avatar>\r\n                <Progress type=\"circle\" percent={percent} width={80}/>\r\n            </div>\r\n            <Divider/>\r\n            <div id=\"input-data\">\r\n                \r\n                <Text editable={{ onChange: setDisplayName }} style={{fontSize:\"30px\"}}>{displayName}</Text><br/>\r\n                <Input value={email} size=\"large\" type=\"email\" placeholder=\"Enter Email Address\" prefix={<MailOutlined />} onChange={(e)=>setEmail(e.target.value)}/><br/>\r\n                <Input value={number} size=\"large\" type=\"tel\" placeholder=\"Enter Mobile Number\" prefix={<MobileOutlined />} onChange={(e)=>setNumber(e.target.value)}/><br/>\r\n\r\n              \r\n                <Popconfirm\r\n            title=\"Are you sure update the profile ?\"\r\n            onConfirm={()=>submitHandler()}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n            disabled={user.verified}\r\n        >\r\n      \r\n            <Button disabled={user.verified}>Update Profile</Button>\r\n        </Popconfirm><br/>\r\n        {visible?<Modal\r\n            title=\"Please enter OTP\"\r\n            style={{ top: 20 }}\r\n            visible={visible}\r\n            onOk={() => verifyOTP()}\r\n            onCancel={() => setVisible(false)}\r\n            >\r\n            <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignContent:\"center\"}}>\r\n            <OtpInput\r\n            onChange={otp => setOTP(otp)}\r\n            numInputs={6}\r\n            inputStyle={{width:40,height:40}}\r\n            value={OTP}\r\n            separator={<span>-</span>}\r\n            />\r\n           \r\n        \r\n        </div>\r\n\r\n        </Modal>:null}\r\n        \r\n       \r\n\r\n        {user.verified? <Alert message=\"Your Profile is verified !\" type=\"success\" showIcon />:\r\n        null}\r\n        <div id='recaptcha-container'></div>\r\n        <br/>\r\n                {error?<Alert\r\n                    message=\"Error\"\r\n                    description=\"Please enter valid values\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  />:null}\r\n                 \r\n            </div>\r\n               \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rewards() {\r\n    return (\r\n        <div id=\"rewards-menu\">\r\n            Rewards Page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Refer() {\r\n    return (\r\n        <div>\r\n            Refer and earn\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Drawer,Menu} from \"antd\"\r\nimport {DollarOutlined,\r\n  UsergroupAddOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined\r\n\r\n} from '@ant-design/icons'\r\nimport firebase from '../../firebase'\r\nimport Profile from './Menu/Profile'\r\nimport Rewards from './Menu/Rewards'\r\nimport Refer from './Menu/Refer'\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function ProfileDrawer(props) {\r\n   \r\n    const [current,setCurrent] = useState(\"profile\")\r\n    const handleClick=(e)=>{\r\n      setCurrent(e.key)\r\n     \r\n    }\r\n    const logout=()=>{\r\n      firebase.auth().signOut();\r\n      \r\n  }\r\n  const currentMenu=(m)=>{\r\n    const menu = {\r\n      \"profile\":<Profile/>,\r\n      \"rewards\":<Rewards/>,\r\n      \"refer\":<Refer/>\r\n    }\r\n    return menu[m];\r\n  }\r\n    return (\r\n        <Drawer\r\n        width={\"70%\"}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={()=>props.setProfileVisible(false)}\r\n        visible={props.profileVisible}\r\n        >\r\n        \r\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n\r\n            <SubMenu  title=\"Profile\" icon={<UsergroupAddOutlined />}>\r\n              <Menu.ItemGroup title=\"Settings\">\r\n                <Menu.Item key=\"profile\" icon={<UserOutlined/>}>Profile</Menu.Item>\r\n                <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={()=>logout()}>Logout</Menu.Item>\r\n              </Menu.ItemGroup>\r\n          </SubMenu>\r\n\r\n            <SubMenu  title=\"Rewards\" icon={<DollarOutlined/>}>\r\n              <Menu.Item key=\"rewards\">Rewards Coins</Menu.Item>\r\n              <Menu.Item key=\"refer\">Refer and Earn</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n\r\n    \r\n\r\n        {currentMenu(current)}\r\n\r\n\r\n        \r\n\r\n      </Drawer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Divider\r\n} from 'antd'\r\nimport {LogoutOutlined,UserOutlined} from '@ant-design/icons'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const user = useSelector(state=>state.auth.user)\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <h1 style={{fontSize:\"40px\",fontFamily:'Galada',color:\"#002766\"}}>{props.title}</h1>\r\n\r\n      <div id=\"navbar-grp\">\r\n      \r\n          <h3 style={{marginRight:\"25px\"}}>{user.displayName}</h3>\r\n     \r\n      \r\n\r\n      <Tooltip placement=\"topLeft\" title=\"Profile\">\r\n      <Button shape=\"round\" onClick={()=>props.setProfileVisible(true)} style={{marginRight:\"15px\"}} icon={<UserOutlined />}></Button>\r\n      \r\n      </Tooltip>\r\n     \r\n     \r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport './dashboard.css'\r\nimport {\r\n    Button,\r\n    notification,\r\n    Divider\r\n} from 'antd'\r\nimport Spinner from '../common/Spinner'\r\nimport ProfileDrawer from './ProfileDrawer'\r\nimport Navbar from './Navbar'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state=>state.auth)\r\n    var [profileVisible,setProfileVisible] = useState(false)\r\n    var [title,setTitle] = useState(\"DASHBOARD\")\r\n    useEffect(()=>{\r\n        if(auth.newUser){\r\n           \r\n        }\r\n        },[]);\r\n       \r\n        \r\n    return (\r\n        <div>\r\n        {!auth.isAuth ? \r\n            <Spinner/>\r\n            :\r\n        <div id=\"dashboard\">\r\n    \r\n            <Navbar title={title}  setProfileVisible={setProfileVisible}/>\r\n            \r\n            <ProfileDrawer profileVisible={profileVisible} setProfileVisible={setProfileVisible}/>\r\n        </div>\r\n    }\r\n      </div>  \r\n    )\r\n}\r\n","import React,{useEffect} from 'react';\nimport firebase from './firebase'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n } from \"react-router-dom\";\n import {useSelector,useDispatch} from 'react-redux'\n import Landing from './components/landing/landing'\nimport Dashboard from './components/dashboard'\nimport {notification,message} from 'antd'\n\n\nfunction App() {\n  const auth = useSelector(state=>state.auth)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            dispatch({type:\"REQUEST_AUTH_SUCCESS\",payload:user.providerData[0]})\n        } else {\n            dispatch({type:\"AUTH_FAILED\"}) \n            dispatch({type:\"RESET_USER\"}) \n            notification.info({\n              message: 'Hi Buddy',\n              description:\n                'Click on Get Started and start earning money',\n                \n              onClick: () => {\n                \n                notification.destroy()\n              },\n              placement:\"bottomLeft\"\n            });\n        }\n      });\n    },[]);\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        {auth.isAuth ?  <span>\n            <Redirect to=\"/dashboard\"/>\n          </span>:<Redirect to=\"/\"/>}\n       \n        <Switch>\n          <Route path=\"/\" exact>\n            <Landing/>\n          </Route>\n         \n          <Route path=\"/dashboard\">\n            <Dashboard/>\n          </Route>\n          \n        </Switch>\n        </Router>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {\r\n   \r\n}\r\n\r\n\r\nexport default function userReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n        return {\r\n            ...action.payload\r\n        }\r\n        case \"RESET_USER\":\r\n            return initialState;\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\n\r\nconst initialState = {\r\n    isAuth:false,\r\n    user:null,\r\n    error:false,\r\n    newUser:false\r\n}\r\n\r\n\r\n\r\n\r\nexport default function authReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"AUTH_SUCCESS\":\r\n        return {\r\n            user:action.payload,\r\n            isAuth:true,\r\n            error:false,\r\n            newUser:false\r\n        }\r\n        case \"AUTH_FAILED\":\r\n            return {\r\n                user:null,\r\n                isAuth:false,\r\n                error:false,\r\n                newUser:false\r\n            }\r\n        case \"AUTH_SUCCESS_FIRST\":\r\n            return{\r\n                user:action.payload,\r\n                isAuth:true,\r\n                error:false,\r\n                newUser:true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\nimport {combineReducers} from 'redux'\r\nimport userReducer from './userReducer'\r\nimport authReducer from './authReducer'\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    user:userReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import {takeEvery,call,put,delay} from 'redux-saga/effects'\r\nimport {notification,message} from 'antd'\r\nimport firebase from '../firebase'\r\n\r\n\r\nvar db = firebase.firestore()\r\n\r\n\r\n\r\nfunction* authSuccess(action){\r\n       \r\n      yield put({type:\"AUTH_SUCCESS\",payload:action.payload})\r\n      yield put({type:\"GET_USER_DATA\",payload:action.payload.uid})\r\n       notification.success({\r\n        message: 'Welcome',\r\n        description:\r\n          'Start Earning money , Click here to play quiz',\r\n          \r\n        onClick: () => {\r\n          notification.destroy()\r\n        },\r\n        placement:\"bottomRight\"\r\n      });\r\n       \r\n}\r\nfunction* newUser(action){\r\n\r\n    const data = action.payload\r\n    yield put({type:\"AUTH_SUCCESS_FIRST\",payload:data})\r\n    console.log(data,data.uid)\r\n    db.collection(\"users\").doc(data.uid).set({\r\n        coins:500,\r\n        referrals:[],\r\n        refferedBy:\"\",\r\n        uid:data.uid,\r\n        verified:false,\r\n        lastQuiz:\"\",\r\n        email:data.email,\r\n        phoneNumber:data.phoneNumber,\r\n        displayName:data.displayName\r\n    }).then(function(docRef) {\r\n        console.log(\"Document written with ID: \", docRef);\r\n    }).catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n    const key = \"updatable\"\r\n        message.loading({ content: 'Adding 500 Coins as SignIn Bonus...', key });\r\n        setTimeout(() => {\r\n            message.success({ content: 'Added!', key, duration: 3 });\r\n        }, 5000);\r\n  \r\n \r\n}\r\n\r\n\r\nexport default function* authSaga(){\r\nyield takeEvery(\"REQUEST_AUTH_SUCCESS\",authSuccess)\r\nyield takeEvery(\"NEW_USER_LOGIN\",newUser)\r\n}","import {takeEvery,call,put,delay} from 'redux-saga/effects'\r\nimport {notification,message} from 'antd'\r\nimport firebaseApp from '../firebase'\r\nimport firebase  from 'firebase'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst db = firebaseApp.firestore();\r\nconst getUserDataAsync = (id)=>{\r\n    var data =  db.collection(\"users\").doc(id).get().then((docRef) => { \r\n    return docRef.data();\r\n})\r\nreturn data;\r\n}\r\n\r\n\r\nfunction* getUserData(action){\r\n    const data = yield call(getUserDataAsync,action.payload)\r\n    if(data){\r\n        yield put({type:\"SET_USER\",payload:data})\r\n          if(!data.verified){\r\n            notification.warn({\r\n                message: 'Your Profile is not verified',\r\n                description:\r\n                  'Update your profile to 100% and get extra 500 Bonus Points',\r\n                  \r\n                onClick: () => {\r\n                  notification.destroy()\r\n                },\r\n                placement:\"bottomRight\"\r\n              });\r\n          }\r\n      }\r\n      \r\n}\r\n\r\nfunction* updateUserProfile(action){\r\n  const newProfile = action.payload\r\n  const user = firebase.auth().currentUser\r\n console.log(newProfile)\r\n      user.updatePhoneNumber(newProfile.phoneCredential).then(function(){\r\n        const key = \"updatable\"\r\n        message.loading({ content: 'Verifying Phone Number...', key });\r\n          setTimeout(() => {\r\n            message.success({ content: 'Verified!', key, duration: 2 });\r\n          }, 1000);\r\n        db.collection(\"users\").doc(newProfile.uid).update({\r\n          email:newProfile.email,\r\n          phoneNumber:newProfile.number,\r\n          displayName:newProfile.displayName,\r\n          verified:true,\r\n          coins:firebase.firestore.FieldValue.increment(500)\r\n        }).then(function*(){\r\n          notification.success({\r\n            message: 'Your Profile is now verified',\r\n            description:\r\n              'You got 500 extra bonus coins',\r\n              \r\n            onClick: () => {\r\n              notification.destroy()\r\n            },\r\n            placement:\"bottomRight\"\r\n          });\r\n          yield put({type:\"GET_USER_DATA\",payload:newProfile.uid})\r\n        })\r\n      }).catch(error=>{\r\n        alert(error)})\r\n        \r\n     \r\n}\r\nexport default function* userSaga(){\r\n    yield takeEvery(\"GET_USER_DATA\",getUserData)\r\n    yield takeEvery(\"UPDATE_USER_PROFILE\",updateUserProfile)\r\n  \r\n}","import authSaga from './authActions'\r\nimport userSaga from './userAction'\r\nimport {all} from 'redux-saga/effects'\r\n\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        authSaga(),\r\n        userSaga()\r\n    ])\r\n}","import {createStore,applyMiddleware} from 'redux'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../actions/saga'\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   applyMiddleware(sagaMiddleware)\r\n  ));\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nReactDOM.render(\n \n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"," const firebaseConfig =  {\r\n    apiKey: \"AIzaSyAuOf94KCcW2oTI3gUitSD35tWsPggP0Z0\",\r\n    authDomain: \"openquiz-29cc5.firebaseapp.com\",\r\n    databaseURL: \"https://openquiz-29cc5.firebaseio.com\",\r\n    projectId: \"openquiz-29cc5\",\r\n    storageBucket: \"openquiz-29cc5.appspot.com\",\r\n    messagingSenderId: \"164997608299\",\r\n    appId: \"1:164997608299:web:356365bf263b879e7a122e\",\r\n    measurementId: \"G-BVJGHYMEWD\"\r\n  }\r\n\r\n\r\n  export default firebaseConfig;","import * as firebase from 'firebase';\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\n\r\nvar app = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nfirebase.analytics();\r\n\r\n\r\n export default app;"],"sourceRoot":""}